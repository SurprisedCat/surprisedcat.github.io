<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>正则表达式 on SurprisedCat</title><link>https://surprisedcat.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link><description>Recent content in 正则表达式 on SurprisedCat</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Copyright © 2020–2021, SurprisedCat; all rights reserved.</copyright><lastBuildDate>Thu, 25 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://surprisedcat.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/index.xml" rel="self" type="application/rss+xml"/><item><title>正则表达式-regular_expression难点易错点</title><link>https://surprisedcat.github.io/projectnotes/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F-regular_expression%E9%9A%BE%E7%82%B9%E6%98%93%E9%94%99%E7%82%B9/</link><pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate><guid>https://surprisedcat.github.io/projectnotes/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F-regular_expression%E9%9A%BE%E7%82%B9%E6%98%93%E9%94%99%E7%82%B9/</guid><description>
&lt;h2 id="regular-expression难点易错点---omit-in-toc---">Regular Expression难点易错点&lt;!-- omit in toc -->&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="#javascript%E5%8C%B9%E9%85%8D%E6%89%80%E6%9C%89%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6">Javascript匹配所有中文字符&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="javascript匹配所有中文字符">Javascript匹配所有中文字符&lt;/h2>
&lt;p>最开始用法：&lt;code>/[\u4e00-\u9fa5]/&lt;/code>。&lt;/p>
&lt;p>&lt;code>/[\u4e00-\u9fa5]/&lt;/code>的意思是匹配所有从&lt;code>U+4E00, cjk unified ideograph-4e00&lt;/code>到&lt;code>U+9FA5, cjk unified ideograph-9fa5&lt;/code>的字符。这一段区域对应的是 Unicode 1.0.1 就收录进来的中日韩统一表意文字（CJK Unified Ideographs）区块，在 Unicode 3.0 加入扩展 A 区以前，这个正则表达式确实给出了所有汉字的编码。然而时光飞逝，Unicode 在2017年6月发布了10.0.0版本。在这20年间，Unicode 添加了许多汉字。比如 Unicode 8.0 添加的 109 号化学元素「鿏（⿰⻐麦）」，其码点是 &lt;code>9FCF&lt;/code>，不在这个正则表达式范围中。而如果我们期望程序里的&lt;code>/[\u4e00-\u9fa5]/&lt;/code>可以与时俱进匹配最新的 Unicode 标准，显然是不现实的事情。&lt;/p>
&lt;p>因此，ECMAScript提供了一个无需维护的正则表达式：&lt;code>/\p{Unified_Ideograph}/u&lt;/code>。&lt;/p>
&lt;p>其中&lt;code>\u&lt;/code>是 ECMAScript 2015 定义的正则表达式标志，意味着将表达式作为 Unicode 码点序列。&lt;code>\p&lt;/code>是ECMAScript 2018 定义的正则表达式 Unicode 属性转义，它赋予了我们根据 Unicode 字符的属性数据构造表达式的能力。&lt;code>Unified_Ideograph&lt;/code>是 Unicode 字符的一个二值属性，对于汉字，其取值为 Yes，否则为 No。因此&lt;code>\p{Unified_Ideograph}&lt;/code>匹配所有满足&lt;code>Unified_Ideograph=yes&lt;/code>的 Unicode 字符，而它的底层实现由运行时所依赖的 Unicode 版本决定，开发者不需要知道汉字的具体 Unicode 码点范围。&lt;/p>
&lt;p>此外，还有&lt;code>/\p{Ideographic}/u&lt;/code> 和 &lt;code>/\p{Script=Han}/u&lt;/code>这两种匹配方式。但是它们匹配了除了汉字以外的其他一些字符，在「汉字匹配正则表达式」这个需求下，是错的。&lt;/p>
&lt;p>比如&lt;code>/\p{Ideographic}/u&lt;/code>这个属性表明该字符属于 CJKV 表意文字或者与汉语书写相关的其他表意文字（如西夏文、女书），这个属性粗略地定义了「中文字符」的分类。使用&lt;code>/\p{Ideographic}/u&lt;/code>来匹配汉字会过于宽泛。一是包含了西夏文、女书，二是只用于编码转换用的兼容字符也纳入其中。&lt;/p>
&lt;p>而&lt;code>/\p{Script=Han}/u&lt;/code>囊括了所有统一表意文字、中日韩兼容性字符、苏州码子、「〇」、「〆」、「々」以及字典常用的部首。从汉文（Han Script）与汉字（CJK Ideograph）的关系我们可以知道，&lt;code>/\p{Script=Han}/u&lt;/code>匹配的是汉文作为一个字符集里面的所有字符，因此它包括了部首、「々」等字符，这些字符要么当它们独立存在的时候没有语言意义（部首独立存在是一个符号），要么无法独立存在（「々」依赖于所修饰的汉字）。所以汉字是汉文的一个单元，汉文除了包含汉字以外，还包括这些符号、数字、修饰符。因此使用&lt;code>/\p{Script=Han}/u&lt;/code>来匹配汉字是混淆了汉文与汉字的概念范围。&lt;/p></description></item></channel></rss>